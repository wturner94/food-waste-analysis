import pandas as pd
import os
import matplotlib.pyplot as plt
import seaborn as sns

# Get the current script's directory
script_dir = os.path.dirname(os.path.abspath(__file__))

# Define the relative paths to the CSV files within the "data" folder
food_waste_relative_path = os.path.join("data", "food_waste_by_country.csv")
gdp_per_capita_relative_path = os.path.join("data", "gdp_per_capita_current_prices.csv")

# Construct the absolute paths
food_waste_file = os.path.join(script_dir, food_waste_relative_path)
gdp_per_capita_file = os.path.join(script_dir, gdp_per_capita_relative_path)

# Read the first two columns and the 11th column of the food waste CSV file into a dataframe
# Skip the first row and treat it as data, not header
food_waste_df = pd.read_csv(food_waste_file, encoding='ANSI', usecols=[0, 1, 10], header=None, skiprows=[0])

# Read only the first and 42nd column of the GDP per Capita CSV file into a dataframe
# Skip the first two rows and treat them as data, not header
gdp_per_capita_df = pd.read_csv(gdp_per_capita_file, encoding='ANSI', usecols=[0, 41], header=None, skiprows=[0, 1])

# Reset the index after reading the CSV files
food_waste_df.reset_index(drop=True, inplace=True)
gdp_per_capita_df.reset_index(drop=True, inplace=True)

# Rename the columns
food_waste_df.columns = ["country", "kg/capita/year", "region"]
gdp_per_capita_df.columns = ["country", "gdp/capita"]

# Merge the dataframes on the "country" column
wealth_to_waste = pd.merge(food_waste_df, gdp_per_capita_df, on="country")

# Reorder the columns in the wealth_to_waste dataframe
wealth_to_waste = wealth_to_waste[['country', 'kg/capita/year', 'gdp/capita', 'region']]

# Convert to numeric, replace non-numeric values to NaN
wealth_to_waste['gdp/capita'] = pd.to_numeric(wealth_to_waste['gdp/capita'], errors='coerce')
wealth_to_waste['kg/capita/year'] = pd.to_numeric(wealth_to_waste['kg/capita/year'], errors='coerce')

# Calculate a ratio that compares the food waste generated by a country to its economic output
wealth_to_waste['waste_to_wealth_ratio'] = wealth_to_waste['kg/capita/year'] / wealth_to_waste['gdp/capita']

# ----------------------------------------------------------
# Display the updated dataframe
print("Updated Wealth to Waste Dataframe:")
print(wealth_to_waste.head())
# ----------------------------------------------------------

# Calculate regional averages
avg_region_data = wealth_to_waste.groupby('region').agg({'kg/capita/year': 'mean', 'gdp/capita': 'mean'})
# print(avg_region_data)

# Compare regional averages using a bar chart
regional_averages = wealth_to_waste.groupby('region')['gdp/capita'].mean().sort_values(ascending=False)
regional_averages.plot(kind='bar', color='skyblue')
plt.xlabel('Region')
plt.ylabel('Average GDP per Capita')
plt.title('Average GDP per Capita Across Regions')
plt.show()